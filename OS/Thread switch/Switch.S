	.text
	.code64
	.global __switch_threads

/*
	Сохраняет крнтекст доного потока и загружает контекст второго 
	RDI - хранит суказатель на то место, куда 
		сохранить указатель на текущий контекст
	RSI - указатель на следующий контекст
*/
__switch_threads:

/*
	Сохраняем контакст -- регистры общего назначения и регистр флагов
	Заметим, что на стеке уже лежит адрес возврата, который сохранила
		функция, вызвавшая __switch_threads
	То есть, контекстом считаем следующее:
		[ RFLAGS, R15-R12, RBP, RBX, IP* ]
	IP* -- указатель на то, куда необходимо передать упраление после
		загрузки данного контекста
*/
	pushq %rbx
	pushq %rbp
	pushq %r12
	pushq %r13
	pushq %r14
	pushq %r15
	pushfq

/*
	Верхушка стека (RSP) в данный момет указывает на сохраненный контекст
		сохраняем этот указатель по адресу, переданному в RDI
*/
	movq %rsp, (%rdi)

/*	Меняем указатель стека на указатель на новый контекст */
	movq %rsi, %rsp

/*
	Восстанавливаем регистры (уже нового процесса) в обратном порядке
	После этого на стеке останется IP* нового процесса
*/
	popfq
	popq %r15
	popq %r14
	popq %r13
	popq %r12
	popq %rbp
	popq %rbx

/* 	RETQ передаст упрваление по адресу на вершине стека */
	retq